Window.localStorage
La propiedad de sólo lectura localStorage te permite acceder al objeto local Storage; los datos persisten almacenados entre de las diferentes sesiones de navegación. localStorage es similar a sessionStorage (en-US). La única diferencia es que, mientras los datos almacenados en localStorage no tienen fecha de expiración, los datos almacenados en sessionStorage son eliminados cuando finaliza la sesion de navegación - lo cual ocurre cuando se cierra la página.

Con sessionStorage (en-US) los datos persisten sólo en la ventana/tab que los creó, mientras que con localStorage los datos persisten entre ventanas/tabs con el mismo origen.

Debe tenerse en cuenta que los datos almacenados tanto en localStorage como en sessionStorage son específicos del protocolo de la página.

Las claves y los valores son siempre cadenas de texto (ten en cuenta que, al igual que con los objetos, las claves de enteros se convertirán automáticamente en cadenas de texto).

Sintaxis
miStorage = window.localStorage;
Copy to Clipboard
Valor
Un objeto Storage que se puede utilizar para acceder al espacio de almacenamiento local del origen actual.

Excepciones
SecurityError
La solicitud viola una decisión de política, o el origen no es una tupla válida de protocolo/host/puerto (esto puede suceder si el origen usa el protocolo file: o data:, por ejemplo). Por ejemplo, el usuario puede tener su navegador configurado a fin de denegar el permiso para conservar datos al origen especificado.
Ejemplo
El siguiente código accede al objeto local Storage actual y agrega un ítem al mismo usando Storage.setItem().

localStorage.setItem('miGato', 'Juan');
Copy to Clipboard
Nota: Por favor ver el articulo Usando la Web Storage API para un ejemplo completo.

La sintaxis para leer el ítem almacenado en localStorage es la siguiente:

var cat = localStorage.getItem('miGato');
Copy to Clipboard
La sintaxis para eliminar el ítem almacenado en localStorage es la siguiente:

localStorage.removeItem('miGato');
Copy to Clipboard
La sintaxis para eliminar todos los ítems almacenados en localStorage es la siguiente:

// Elimina todos los elementos
localStorage.clear();

O puedes utilizar:
Window.sessionStorage
La propiedad sessionStorage permite acceder a un objeto Storage asociado a la sesión actual. La propiedad sessionStorage es similar a localStorage, la única diferencia es que la información almacenada en localStorage no posee tiempo de expiración, por el contrario la información almacenada en sessionStorage es eliminada al finalizar la sesion de la página. La sesión de la página perdura mientras el navegador se encuentra abierto, y se mantiene por sobre las recargas y reaperturas de la página. Abrir una página en una nueva pestaña o ventana iniciará una nueva sesión, lo que difiere en la forma en que trabajan las cookies de sesión.

Sintaxis
// Almacena la información en sessionStorage
sessionStorage.setItem('key', 'value');

// Obtiene la información almacenada desde sessionStorage
var data = sessionStorage.getItem('key');
Copy to Clipboard
Valor 
Un objeto de tipo Storage.

Ejemplo
El siguiente código accede al objeto Storage del la sesión actual del domino y le añade un elemento utilizando Storage.setItem().

sessionStorage.setItem('myCat', 'Tom');
Copy to Clipboard
El siguiente ejemplo graba de forma automática el contenido de un campo de texto, y si el navegador es actualizado accidentalmente, restaura el contenido del campo de texto para no perder lo escrito.

// Obtiene el campo de texto que vamos a moniterear
var field = document.getElementById("field");

// Verificamos si tenemos algún valor auto guardado
// (esto solo ocurrirá si la página es recargada accidentalmente)
if (sessionStorage.getItem("autosave")) {
  // Restaura el contenido al campo de texto
  field.value = sessionStorage.getItem("autosave");
}

// Espera por cambios en el campo de texto
field.addEventListener("change", function() {
  // Almacena el resultado en el objeto de almacenamiento de sesión
  sessionStorage.setItem("autosave", field.value);
});